(input) 1
(input) 1
(values.hasNext()) 1
(values.hasNext()) 1
-> 1
-> 1
-> 1
-> 1
-> 1
-> 1
-> 1
-> 1
-> 1
-> 1
-> 1
-> 1
0; 1
0; 1
1. 1
1. 1
10. 1
10. 1
12. 1
12. 1
14. 1
14. 1
16. 1
16. 1
18. 1
18. 1
21. 1
21. 1
23. 1
23. 1
25. 1
25. 1
27. 1
27. 1
29. 1
29. 1
3. 1
3. 1
30. 1
30. 1
32. 1
32. 1
5. 1
5. 1
7. 1
7. 1
9. 1
9. 1
<k2, 1
<k2, 1
<k2, 1
<k2, 1
<key, 1
<key, 1
<key, 1
<key, 1
<key, 1
<key, 1
= 1
= 1
= 1
= 1
= 1
= 1
= 1
= 1
= 1
= 1
Before 1
Before 1
Code 1
Code 1
Hadoop 1
Hadoop 1
IOException 1
IOException 1
IOException 1
IOException 1
IntWritable 1
IntWritable 1
IntWritable, 1
IntWritable, 1
IntWritable> 1
IntWritable> 1
IntWritable> 1
IntWritable> 1
IntWritable> 1
IntWritable> 1
IntWritable> 1
IntWritable> 1
Iterator<IntWritable> 1
Iterator<IntWritable> 1
MapReduceBase 1
MapReduceBase 1
MapReduceBase 1
MapReduceBase 1
Mapper<LongWritable, 1
Mapper<LongWritable, 1
Output 1
Output 1
OutputCollector<Text, 1
OutputCollector<Text, 1
OutputCollector<Text, 1
OutputCollector<Text, 1
Reducer<Text, 1
Reducer<Text, 1
Reporter 1
Reporter 1
Reporter 1
Reporter 1
Source 1
Source 1
String 1
String 1
Text 1
Text 1
Text 1
Text 1
Text(); 1
Text(); 1
Text, 1
Text, 1
Text, 1
Text, 1
Text, 1
Text, 1
The 1
The 1
The 1
The 1
WordCount 1
WordCount 1
WordCount 1
WordCount 1
WordCount 1
WordCount 1
WordCount.java 1
WordCount.java 1
a 1
a 1
a 1
a 1
a 1
a 1
a 1
a 1
a 1
a 1
a 1
a 1
a 1
a 1
an 1
an 1
and 1
and 1
and 1
and 1
and 1
and 1
and 1
and 1
be 1
be 1
by 1
by 1
by 1
by 1
combine 1
combine 1
conceivably 1
conceivably 1
different 1
different 1
each 1
each 1
exclusively 1
exclusively 1
extends 1
extends 1
extends 1
extends 1
flavour 1
flavour 1
for 1
for 1
given 1
given 1
hence 1
hence 1
implement 1
implement 1
implement 1
implement 1
import 1
import 1
import 1
import 1
import 1
import 1
import 1
import 1
import 1
import 1
import 1
import 1
import 1
import 1
in 1
in 1
int 1
int 1
interface 1
interface 1
interface. 1
interface. 1
java.util.*; 1
java.util.*; 1
job 1
job 1
job, 1
job, 1
job: 1
job: 1
key 1
key 1
key 1
key 1
key, 1
key, 1
key, 1
key, 1
local-standalone, 1
local-standalone, 1
number 1
number 1
of 1
of 1
of 1
of 1
of 1
of 1
of 1
of 1
of 1
of 1
of 1
of 1
of 1
of 1
on 1
on 1
operates 1
operates 1
or 1
or 1
org.apache.hadoop.mapred.*; 1
org.apache.hadoop.mapred.*; 1
org.myorg; 1
org.myorg; 1
output 1
output 1
output, 1
output, 1
output, 1
output, 1
output.collect(word, 1
output.collect(word, 1
pairs 1
pairs 1
pairs 1
pairs 1
pairs, 1
pairs, 1
private 1
private 1
private 1
private 1
produces 1
produces 1
public 1
public 1
public 1
public 1
public 1
public 1
public 1
public 1
public 1
public 1
reduce(Text 1
reduce(Text 1
serializable 1
serializable 1
sum 1
sum 1
sum 1
sum 1
that 1
that 1
that 1
that 1
the 1
the 1
the 1
the 1
the 1
the 1
the 1
the 1
the 1
the 1
the 1
the 1
the 1
the 1
the 1
the 1
the 1
the 1
the 1
the 1
the 1
the 1
the 1
the 1
through 1
through 1
throws 1
throws 1
throws 1
throws 1
to 1
to 1
to 1
to 1
to 1
to 1
to 1
to 1
to 1
to 1
to 1
to 1
tokenizer 1
tokenizer 1
types 1
types 1
types. 1
types. 1
v1.0 1
v1.0 1
v1> 1
v1> 1
v3> 1
v3> 1
value 1
value 1
value, 1
value, 1
value.toString(); 1
value.toString(); 1
value> 1
value> 1
value> 1
value> 1
value> 1
value> 1
walk 1
walk 1
while 1
while 1
while 1
while 1
work. 1
work. 1
{ 1
{ 1
{ 1
{ 1
{ 1
{ 1
{ 1
{ 1
{ 1
{ 1
{ 1
{ 1
{ 1
{ 1
} 1
} 1
} 1
} 1
} 1
} 1
} 1
} 1
